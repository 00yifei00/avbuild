language: cpp
sudo: false
dist: trusty
cache:
  apt: true
  directories:
    - ffmpeg-$FF_VERSION
    - android-ndk-${NDK_VERSION}/platforms/android-{9,21}
    - android-ndk-${NDK_VERSION}/sources/${llvm*,gnu-libstdc++,system}
    - android-ndk-${NDK_VERSION}/toolchains/llvm
    - android-ndk-${NDK_VERSION}/toolchains/aarch64-linux-android-4.9
    - android-ndk-${NDK_VERSION}/toolchains/arm-linux-androideabi-4.9
    - android-ndk-${NDK_VERSION}/toolchains/x86-4.9
# TODO: libav

git:
  submodules: true

matrix:
  include:
    - os: osx
      compiler: clang
      osx_image: xcode9.1
      env:
        - TARGET=host
    - os: osx
      compiler: clang
      osx_image: xcode9.1
      env:
        - TARGET=iOS
    - os: linux
      compiler: clang
      env:
        - TARGET=raspberry-pi
        - _CC=clang-5.0 #--cc=$_CC
        - USER_OPT=--disable-swscale
      addons: #can be used in matrix, but required by every combination
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - lld-5.0
            - sshpass
    - os: linux
      compiler: gcc # host compiler is not used, just to tell build script to use which compiler to use from ndk. env: CC/CXX
      env:
        - TARGET=android
      addons: #can be used in matrix, but required by every combination
        apt:
          packages:
            - p7zip-full
            - yasm
            - sshpass
    - os: linux
      compiler: clang # host compiler is not used, just to tell build script to use which compiler to use from ndk. env: CC/CXX
      env:
        - TARGET=android
      addons: #can be used in matrix, but required by every combination
        apt:
          packages:
            - p7zip-full
            - yasm
            - sshpass
    - os: linux
      compiler: gcc
      env:
        - TARGET=host
        - _CC=gcc-7 #--cc=$_CC
      addons: #can be used in matrix, but required by every combination
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - libstdc++-7-dev #libmfx
            - p7zip-full
            - yasm
            - libva-dev
            - libvdpau-dev
            - sshpass
    - os: linux
      compiler: clang
      env:
        - TARGET=host
        - _CC=clang-5.0 #--cc=$_CC
      addons: #can be used in matrix, but required by every combination
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test #libstdc++
          packages:
            - clang-5.0
            - libstdc++-7-dev #libmfx
            - p7zip-full
            - yasm
            - libva-dev
            - libvdpau-dev
            - sshpass
# TODO: mingw64 cross build

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update --all; fi
install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install yasm perl hudochenkov/sshpass/sshpass xz; fi
  - |
      if [ ! -d ffmpeg-${FF_VERSION} ]; then
        wget http://ffmpeg.org/releases/ffmpeg-${FF_VERSION}.tar.bz2
        tar jxf ffmpeg-${FF_VERSION}.tar.bz2
      fi
  - |
      if [ "${TARGET:0:7}" == "android" -a ! -d android-ndk-${NDK_VERSION} ]; then
        wget https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip 2>/dev/null
        7z x -y android-ndk-${NDK_VERSION}-linux-x86_64.zip >/dev/null
      fi
  - |
      if [ "$TRAVIS_OS_NAME" == "linux" -a "$TARGET" == "host" ]; then
        wget https://sourceforge.net/projects/avbuild/files/dep/libmfx.7z/download -O libmfx.7z
        7z x -y libmfx.7z -otools &>/dev/null
        export PKG_CONFIG_PATH_EXT=$PWD/tools/linux64-gcc/lib/pkgconfig
      fi
  - |
      if [ "$TARGET" == "raspberry-pi" ]; then
        wget https://sourceforge.net/projects/avbuild/files/raspberry-pi/rpi-sysroot.tar.xz/download -O rpi-sysroot.tar.xz
        tar Jxf rpi-sysroot.tar.xz
        export SYSROOT=$PWD/sysroot
      fi

script:
  - export FFSRC=$PWD/ffmpeg-${FF_VERSION}
  - export ANDROID_NDK=$PWD/android-ndk-${NDK_VERSION}
  - if [ -n "$_CC" ]; then export USER_OPT="$USER_OPT --cc=$_CC"; fi
  - if [ -n "${CONFIG_SUFFIX}" ]; then ln -sf config{${CONFIG_SUFFIX},}.sh; fi
  - USE_TOOLCHAIN=${_CC:-$CC} ./avbuild.sh $TARGET  # CC(gcc/clang) is set by travis depending on compiler

after_success:
  - TARGET_OS=${TARGET}
  - TARGET_OS=${TARGET_OS/#host/${TRAVIS_OS_NAME}}
  - TARGET_OS=${TARGET_OS/#osx/macOS}
  - SUFFIX=${TARGET_OS/%android/$TARGET_OS-$CC}
  - SUFFIX=${SUFFIX/%linux/$SUFFIX-$CC}
  - SUFFIX=${SUFFIX/%raspberry-pi/$SUFFIX-$CC}
  - SUFFIX=${SUFFIX}${CONFIG_SUFFIX}
  - mv sdk* ffmpeg-${FF_VERSION}-${SUFFIX}
  - tar Jcf ffmpeg-${FF_VERSION}-${SUFFIX}{.tar.xz,}
  - ls -hl ffmpeg-${FF_VERSION}-${SUFFIX}.tar.xz
  - sshpass -p $SF_PW scp -o StrictHostKeyChecking=no ffmpeg-${FF_VERSION}-${SUFFIX}.tar.xz $SF_USER,avbuild@frs.sourceforge.net:/home/frs/project/a/av/avbuild/${TARGET_OS}

branches:
  only:
    - master
    - prelease
    - ci
    - /^travis.*$/

notifications:
  email:
    recipients:
      - wbsecg1@gmail.com
    on_success: change
    on_failure: always
